devtools::use_testthat()
devtools::use_data_raw()
?setClass
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
b
vector("list")
is.vector("list")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("bin")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
setClass(Class = "breaks")
new("breaks")
setClass(Class = "breaks", slots="list")
new("breaks")
setClass(Class = "breaks", slots=list(breaks="list"))
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
setClass(Class = "continuous", contains = "breaks")
new("continuous")
a <- new("continuous")
a@breaks
new("core")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("core")
devtools::load_all(".")
new("core")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("core")
new("core")
a <- new("core")
class(a)
devtools::load_all(".")
new("core")
setClass(Class = "levels", slots=list())
new("levels")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("discrete")
a <- new("discrete")
str(a)
a <- new("continuous")
a
a@var_levels
a@na_values
setClass(Class = "levels", slots=list(levels="levels"))
new("levels")
devtools::load_all(".")
devtools::load_all(".")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("levels")
new("levels")
new("levels")
new("levels")
new("levels")
?traceable
??traceable
setClass(Class = "levels", contains = "VIRTUAL")
new("levels")
setClass(Class = "levels", slots=list(
var_levels, exceptions, na_values), contains = "VIRTUAL")
setClass(Class = "levels", slots=list(
"var_levels",
"exceptions",
"na_values"), contains = "VIRTUAL")
setClass(Class = "levels", slots="VIRTUAL")
new("levels")
setClass(Class = "levels", contains="VIRTUAL")
new("levels")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
setClass(Class = "continuous", contains = "levels")
new("continuous")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("continuous")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("bin")
str(new("bin"))
new("discrete")
className(new("discrete"))
className("discrete")
new("core")
a <- new("core")
a@levels
a@levels <- new("continuous")
a
a@levels <- 1
a@levels <- butt
a@levels <- ''
a@levels <- 'butt'
a@levels <- new("discrete")
a
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("bin")
Grayscale
library(Matrix)
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("bin")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Bin")
.Call
?.Call
?setClassUnion()
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Bin")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Bin")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Bin")
devtools::load_all(".")
new("Bin")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Bin")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Continuous Bin")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Discrete")
new("Discrete Bin")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Discrete Bin")
new("Continuous Bin")
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Discrete Bin")
new("Bin")
?validObject()
is.numeric(factor(letters))
is.integer(factor(letters))
mode(factor(letters))
typeof(factor(letters))
storage.mode(factor(letters))
is.numeric
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Continuous Bin")
new("Continuous Bin", Data = list(x=1:10, y=1:20))
a <- new("Continuous Bin", Data = list(x=1:10, y=1:20))
a@Data$x
errs <- c()
errs
errs <- c(errs, "test")
errs
table(rep(0, 100))
factor(1:10, levels=c(0,1))
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Bin")
new("Bin", Data=list(x=1:10, y=1:15))
new("Bin", Data=list(x=1:10, y=c(NA, 1:15))
)
new("Continuous Bin", Data=list(x=1:10, y=c(NA, 1:15))
)
new("Continuous Bin", Data=list(x=1:10, y=rep(c(0,1), 5))
)
rep(c(0,1), 5)
new("Continuous Bin", Data=list(x=1:10, y=rep(0,10))
)
is.na(factor(rep(0,10), levels=c(0,1))
)
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Continuous Bin", Data=list(x=1:10, y=rep(0,10)))
var(rep(0,10))
var(rep(1,10))
source('F:/R Dev/binnr2/R/bin.class.R', echo=TRUE)
new("Continuous Bin", Data=list(x=1:10, y=rep(0,10)))
new("Continuous Bin", Data=list(x=1:10, y=rep(1,10)))
new("Continuous Bin", Data=list(x=1:10, y=c(0, rep(1,9))))
a <- new("Continuous Bin", Data=list(x=1:10, y=c(0, rep(1,9))))
a@Levels
a@Levels@Var
a@Counts
a@Values
