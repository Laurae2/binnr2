{
    "collab_server" : "",
    "contents" : "## transform class has data, and exceptions\n# setClassUnion(\"transformData\", c(\"factor\", \"numeric\"))\n\nsetClass(\"Transform\" ,\n  slots = list(\n    filter = \"logical\",\n    binned = \"factor\"),\n  contains = \"VIRTUAL\")\n\nsetClass(\"Continuous\",\n  slots= list(\n    x    = \"numeric\",\n    cuts = \"numeric\",\n    exceptions = \"numeric\"),\n\n  contains=\"Transform\")\n\nsetClass(\"Discrete\",\n  slots=list(\n    x    = \"factor\",\n    map  = \"list\"),\n  contains=\"Transform\")\n\n\nsetMethod(\"show\", signature = \"Continuous\", definition = function(object) {\n  print(table(object@binned))\n})\n\nsetMethod(\"show\", signature = \"Discrete\", definition = function(object) {\n  print(table(object@binned))\n})\n\nsetMethod(\"show\", signature = \"Bin\", definition = function(object) {\n  print(cbind(tapply(object@y, object@transform@binned, mean)))\n})\n\nsetGeneric(\"collapse\")\n\nsetMethod(\"collapse\", signature = \"Transform\", function(object) {\n  print(\"what's up!?\")\n})\n\nsetMethod(\"collapse\", signature = \"Continuous\", function(object) {\n  f <- object@filter\n  bins <- cut(object@x[f], object@cuts, include.lowest = T, dig.lab=3)\n  x <- factor(object@x, exclude=NULL, levels=c(levels(bins), object@exceptions, NA))\n  x[f] <- bins\n  object@binned <- x\n  object\n})\n\nsetMethod(\"collapse\", signature = \"Discrete\", function(object) {\n  x <- object@x\n  levels(x) <- c(levels(x), NA)\n  object@binned <- x\n  object\n})\n\nContinuous <- function(x, cuts, exceptions) {\n  f <- !is.na(x) & !(x %in% exceptions)\n  obj <- new(\"Continuous\", x=x, cuts=cuts, exceptions=exceptions, filter=f)\n  obj <- collapse(obj)\n  obj\n}\n\nDiscrete <- function(x) {\n  f <- !is.na(x)\n  obj <- new(\"Discrete\", x=x, filter=f)\n  obj <- collapse(obj)\n  obj\n}\n\nsetClass(\"Bin\", slots = list(y=\"numeric\", transform=\"Transform\"))\n\nres <- rbinom(1000, 1, .25)\n\nBin <- function(x=x, y=res) {\n  if(is.null(cuts)) cuts <- cuts\n\n  tf <- Continuous(x, cuts, exceptions)\n\n  new(\"Bin\", y=y, transform=tf)\n\n}\n\n\n\n\n\nx <- runif(1000)\nx[sample(1:1000, 50)] <- NA\nx[1:100] <- -1\n\nexceptions <- -1\nf <- !is.na(x) & !(x %in% exceptions)\n\ncuts <- c(-Inf, quantile(x[f], seq(0,1,0.05), na.rm = T)[-c(1,21)], Inf)\n\ny <- factor(sample(letters, 1000, replace=T))\n\ntest <- Continuous(x=x, cuts=cuts, exceptions = exceptions)\ntest2 <- Discrete(x=y)\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1452883199225.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3620440729",
    "id" : "32C62989",
    "lastKnownWriteTime" : 1452893917,
    "last_content_update" : 1452893917062,
    "path" : "F:/R Dev/binnr2/R/transform.class.R",
    "project_path" : "R/transform.class.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}